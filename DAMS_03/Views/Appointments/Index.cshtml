@model DAMS_03.Models.AppointmentIndexModel
@using DAMS_03.HtmlHelpers

@{
    ViewBag.Title = "Index";
}

<h2>View Appointments</h2>

<hr />

<br />

<div class="form-horizontal">

    <div class="col-md-10">
        @{

            int pageNo;
            int perpageNo;

            if (Request["page"] != null)
            {
                if (!Int32.TryParse(Request["page"].ToString(), out pageNo))
                {
                    pageNo = 1;
                }
                else if (pageNo < 1)
                {
                    pageNo = 1;
                }
            }
            else
            {
                pageNo = 1;
            }

            int prevPage = pageNo - 1;
            int nextPage = pageNo + 1;
            int nextTenPage = pageNo + 10;
            int prevTenPage = pageNo - 10;
            int maxpage = Model.maxPages;

            if (Request["perpage"] != null)
            {
                if (!Int32.TryParse(Request["perpage"].ToString(), out perpageNo))
                {
                    perpageNo = 10;
                }
            }
            else
            {
                perpageNo = 10;
            }

            //

            string search = String.Empty;
            string searchby = String.Empty;

            if (Request["search"] != null)
            {
                search = Request["search"];
            }

            if (Request["searchby"] != null)
            {
                searchby = Request["searchby"];
            }

            string order = String.Empty;
            string orderBy = String.Empty;

            if (Request["order"] != null)
            {
                order = Request["order"];
            }

            if (Request["orderBy"] != null)
            {
                orderBy = Request["orderBy"];
            }

            string indexby = String.Empty;

            if (Request["indexby"] != null)
            {
                indexby = Request["indexby"];
            }

            //
            <p> @Model.maxRecords records found </p>
            switch (indexby)
            {
                case "1":
                    <p> Appointment Requests </p>
                    break;
                case "2":
                    <p> Cancelled Appointments </p>
                    break;
                case "3":
                    <p> Confirmed Appointments </p>
                    break;
                case "4":
                    <p> Declined Appointments </p>
                    break;
                case "5":
                    <p> Completed Appointments </p>
                    break;
                case "6":
                    <p> Cancelled/Declined Appointments </p>
                    break;
                default:
                    break;
            }
            <br />
            <p>Page @pageNo of @maxpage</p>
            <br />

        }
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.pageNo)
            @Html.HiddenFor(model => model.perpageNo)
            @Html.HiddenFor(model => model.order)
            @Html.HiddenFor(model => model.orderBy)
            @Html.HiddenFor(model => model.indexby)

            List<SelectListItem> listItems = new List<SelectListItem>();
            //listItems.Add(new SelectListItem
            //{
            //    Text = "",
            //    Value = ""
            //});
            listItems.Add(new SelectListItem
            {
                Text = "Appointment ID",
                Value = "apptid"
            });
            listItems.Add(new SelectListItem
            {
                Text = "User name",
                Value = "user"

            });
            listItems.Add(new SelectListItem
            {
                Text = "Dentist",
                Value = "dentist"
            });
            listItems.Add(new SelectListItem
            {
                Text = "Date",
                Value = "date"
            });

            <div class="form-group">
                @Html.LabelFor(model => model.searchby, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @BootstrapHtml.Dropdown("searchby", listItems, searchby)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.search, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.search, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <input type="submit" value="Search" class="btn btn-primary" />

            <button class="btn btn-primary" type="button" value="Page"
                    onclick="location.href='@Url.Action("Index", "Appointments", new { page = pageNo, perpage = perpageNo, search = "", searchby = "", indexby = indexby})'">
                View all
            </button>

            if (search != "" && searchby != "")
            {
                <hr />
                <p>Searching for @searchby with query : @search</p>
            }

        }
        <br /><br />
    </div>
</div>

<hr />


<div class="row">
    <div class="panel panel-primary pull-left">
        <div class="panel-heading clearfix">
            <div class="panel-title" width="100%">
                List of Appointments
                <button class="btn btn-default" type="button" style="float: right"
                        onclick="location.href='@Url.Action("CreateSelection", "Appointments")'">
                    Create an Appointment
                </button>
            </div>
        </div>
        <div class="panel-body">
            <div class="table-responsive">
                <table class="table table-hover table-sieve">
                    <thead>
                        <tr>
                            <th>
                                @*@Html.DisplayNameFor(model => model.appointments[0].AppointmentID)*@
                                @if (order.Equals("asec"))
                                {
                                    <a href="@Url.Action("Index", "Appointments", new { page = prevPage, perpage = perpageNo, search = search, searchby = searchby, order = "desc", orderBy = "apptId", indexby = indexby})">
                                        @Html.DisplayNameFor(model => model.appointments[0].ID)
                                    </a>
                                }
                                else
                                {
                                    <a href="@Url.Action("Index", "Appointments", new { page = prevPage, perpage = perpageNo, search = search, searchby = searchby, order = "asec", orderBy = "apptId", indexby = indexby})">
                                        @Html.DisplayNameFor(model => model.appointments[0].ID)
                                    </a>
                                }

                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.appointments[0].AppointmentID)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.appointments[0].UserName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.appointments[0].ApprovalState)
                            </th>
                            <th>
                                @*@Html.DisplayNameFor(model => model.appointments[0].PreferredDate)*@
                                @if (order.Equals("asec"))
                                {
                                    <a href="@Url.Action("Index", "Appointments", new { page = prevPage, perpage = perpageNo, search = search, searchby = searchby, order = "desc", orderBy = "prefdate", indexby = indexby})">
                                        @Html.DisplayNameFor(model => model.appointments[0].PreferredDate)
                                    </a>
                                }
                                else
                                {
                                    <a href="@Url.Action("Index", "Appointments", new { page = prevPage, perpage = perpageNo, search = search, searchby = searchby, order = "asec", orderBy = "prefdate", indexby = indexby})">
                                        @Html.DisplayNameFor(model => model.appointments[0].PreferredDate)
                                    </a>
                                }

                            </th>
                            <th>
                                @*@Html.DisplayNameFor(model => model.appointments[0].AppointmentDate)*@
                                @if (order.Equals("asec"))
                                {
                                    <a href="@Url.Action("Index", "Appointments", new { page = prevPage, perpage = perpageNo, search = search, searchby = searchby, order = "desc", orderBy = "apptdate", indexby = indexby})">
                                        @Html.DisplayNameFor(model => model.appointments[0].AppointmentDate)
                                    </a>
                                }
                                else
                                {
                                    <a href="@Url.Action("Index", "Appointments", new { page = prevPage, perpage = perpageNo, search = search, searchby = searchby, order = "asec", orderBy = "apptdate", indexby = indexby})">
                                        @Html.DisplayNameFor(model => model.appointments[0].AppointmentDate)
                                    </a>
                                }

                            </th>
                            @*<th>
                                    @Html.DisplayNameFor(model => model.appointments[0].PreferredTime)
                                </th>*@
                            <th>
                                @Html.DisplayNameFor(model => model.appointments[0].ClinicHospitalName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.appointments[0].RequestDoctorDentistName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.appointments[0].DoctorDentistName)
                            </th>

                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="appointmentTableBody">
                        @for (int i = 0; i < Model.appointments.Count; i++)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => Model.appointments[i].ID)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => Model.appointments[i].AppointmentID)
                                </td>
                                <td>
                                    <a href="@Url.Action("Details", "UserAccounts", new { id = Model.appointments[i].UserID })">
                                        @Html.DisplayFor(modelItem => Model.appointments[i].UserName)
                                    </a>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => Model.appointments[i].ApprovalState)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => Model.appointments[i].PreferredDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => Model.appointments[i].AppointmentDate)
                                </td>
                                @*<td>
                                        @Html.DisplayFor(modelItem => Model.appointments[i].PreferredTime)
                                    </td>*@
                                <td>
                                    @Html.DisplayFor(modelItem => Model.appointments[i].ClinicHospitalName)
                                </td>
                                <td>
                                    @if (Model.appointments[i].RequestDoctorDentistID == null)
                                    {
                                        @Html.DisplayFor(modelItem => Model.appointments[i].RequestDoctorDentistName)
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("Details", "DoctorDentists", new { id = Model.appointments[i].DoctorDentistID })">
                                            @Html.DisplayFor(modelItem => Model.appointments[i].RequestDoctorDentistName)
                                        </a>
                                    }
                                </td>
                                <td>
                                    @if (Model.appointments[i].DoctorDentistName == null)
                                    {
                                        @Html.DisplayFor(modelItem => Model.appointments[i].DoctorDentistName)
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("Details", "DoctorDentists", new { id = Model.appointments[i].DoctorDentistID })">
                                            @Html.DisplayFor(modelItem => Model.appointments[i].DoctorDentistName)
                                        </a>
                                    }
                                </td>

                                <td>
                                    <button class="btn btn-primary" type="button"
                                            onclick="location.href='@Url.Action("Details", "Appointments", new { id = Model.appointments[i].ID })'">
                                        Details
                                    </button><br />
                                    <button class="btn btn-success" type="button"
                                            onclick="location.href='@Url.Action("Edit", "Appointments", new { id = Model.appointments[i].ID })'">
                                        Update
                                    </button><br />
                                    @if (this.User.IsInRole("SysAdmin"))
                                    {
                                        <button class="btn btn-danger" type="button"
                                                onclick="location.href='@Url.Action("Delete", "Appointments", new { id = Model.appointments[i].ID })'">
                                            Delete
                                        </button>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@{

    <br /><br />

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "Appointments", new { page = 1, perpage = perpageNo, search = search, searchby = searchby, order = order, orderBy = orderBy, indexby = indexby})'">
        &lt&lt&lt First Page
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "Appointments", new { page = prevTenPage, perpage = perpageNo, search = search, searchby = searchby, order = order, orderBy = orderBy, indexby = indexby})'">
        &lt&lt Prev 10 Pages
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "Appointments", new { page = prevPage, perpage = perpageNo, search = search, searchby = searchby, order = order, orderBy = orderBy, indexby = indexby})'">
        &lt Prev Page
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "Appointments", new { page= nextPage, perpage = perpageNo, search = search, searchby = searchby, order = order, orderBy = orderBy, indexby = indexby })'">
        Next Page &gt
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "Appointments", new { page = nextTenPage, perpage = perpageNo, search = search, searchby = searchby, order = order, orderBy = orderBy, indexby = indexby })'">
        Next 10 Pages &gt&gt
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "Appointments", new { page = maxpage, perpage = perpageNo, search = search, searchby = searchby, order = order, orderBy = orderBy, indexby = indexby })'">
        Last Page &gt&gt&gt
    </button>

    <br />

    <hr />

    <p> Select number of results per page: </p>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "Appointments", new { page=pageNo, perpage = 10, search = search, searchby = searchby, order = order, orderBy = orderBy, indexby = indexby })'">
        10
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "Appointments", new { page=pageNo, perpage = 20, search = search, searchby = searchby, order = order, orderBy = orderBy, indexby = indexby })'">
        20
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "Appointments", new { page=pageNo, perpage = 50, search = search, searchby = searchby, order = order, orderBy = orderBy, indexby = indexby })'">
        50
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "Appointments", new { page=pageNo, perpage = 100, search = search, searchby = searchby, order = order, orderBy = orderBy, indexby = indexby })'">
        100
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "Appointments", new { page=pageNo, perpage = 500, search = search, searchby = searchby, order = order, orderBy = orderBy, indexby = indexby })'">
        500
    </button>
}




