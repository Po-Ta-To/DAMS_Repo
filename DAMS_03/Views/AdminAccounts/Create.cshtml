@model DAMS_03.Models.AdminAccountCreateModel
@*@using MvcCheckBoxList.Model*@
@using DAMS_03.HtmlHelpers

@{
    ViewBag.Title = "Create";
}

<h2>Create Admin Account</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.AdminID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AdminID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdminID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SecurityLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*<select id="SecurityLevel" class="form-control input-group-sm" name="SecurityLevel">
                        <option value="1">System Account</option>
                        <option value="2">Admin Account</option>
                        <option value="3" selected="selected">Clerk Account</option>
                    </select>*@
                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    listItems.Add(new SelectListItem
                    {
                        Text = "System Account",
                        Value = "1"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Admin Account",
                        Value = "2"

                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Clerk Account",
                        Value = "3",
                        Selected = true
                    });
                }

                @*@Html.DropDownListFor(model => model.SecurityLevel, listItems, new { htmlAttributes = new { @class = "form-control input-group-sm" } })*@

                @BootstrapHtml.Dropdown("SecurityLevel", listItems, Model.SecurityLevel)

                @Html.ValidationMessageFor(model => model.SecurityLevel, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.HospClinID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @*<select id="HospClinID" class="form-control input-group-sm">

                        <option value="notselected" selected="selected"> - </option>

                        @foreach (SelectListItem item in Model.itemSelection)
                        {
                            <option value=@item.Value>@item.Text</option>

                        }

                    </select>*@

                @*@Html.DropDownListFor(model => model.HospClinID, Model.itemSelection, new { htmlAttributes = new { @class = "form-control input-group-sm" } })*@

                @BootstrapHtml.Dropdown("HospClinID", Model.itemSelection, Model.HospClinID)

                @*@Html.HiddenFor(model => model.itemSelection) lists doesnt work for hiddenfor*@

                @Html.ValidationMessageFor(model => model.HospClinID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
                <button class="btn btn-primary" type="button"
                        onclick="location.href='@Url.Action("Index", "AdminAccounts")'">
                    Back to List
                </button>
            </div>
        </div>
    </div>
                    }

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
