@model DAMS_03.Models.ClinicHospitalEditModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Clinic/Hospital</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.ClinicHospitalID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClinicHospitalID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClinicHospitalID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClinicHospitalName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClinicHospitalName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClinicHospitalName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClinicHospitalAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClinicHospitalAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClinicHospitalAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClinicHospitalTel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClinicHospitalTel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClinicHospitalTel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClinicHospitalEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClinicHospitalEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClinicHospitalEmail, "", new { @class = "text-danger" })
            </div>
        </div>


        <hr />

        <div class="form-group">
            <p><b>Opening Hours</b></p>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsStringOpenHours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsStringOpenHours, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsStringOpenHours, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClinicHospitalOpenHours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClinicHospitalOpenHours, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClinicHospitalOpenHours, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        @for (int i = 0; i < 3; i++)
        {

            <div class="form-group">
                <p></p>
                <div>
                    @switch (i)
                    {
                        case 0:
                            <p><b>Monday to Fridays</b></p>
                            break;
                        case 1:
                            <p><b>Saturday</b></p>
                            break;
                        case 2:
                            <p><b>Sunday and Public Holidays</b></p>
                            break;

                    }
                </div>
            </div>

            @Html.HiddenFor(model => model.OpeningHours[i].OpeningHoursDay)

            <div class="form-group">
                @Html.LabelFor(model => model.OpeningHours[i].TimeRangeStart, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OpeningHours[i].TimeRangeStart, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OpeningHours[i].TimeRangeStart, "", new { @class = "text-danger" })
                </div>
            </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OpeningHours[i].TimeRangeEnd, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OpeningHours[i].TimeRangeEnd, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OpeningHours[i].TimeRangeEnd, "", new { @class = "text-danger" })
                    </div>
                </div>

        }



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
                <button class="btn btn-primary" type="button"
                        onclick="location.href='@Url.Action("Index", "ClinicHospitals")'">
                    Cancel
                </button>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
