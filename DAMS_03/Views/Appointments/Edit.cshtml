@model DAMS_03.Models.AppointmentEditViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Appointment</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AppointmentID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AppointmentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UserID, Model.selectUser, new { htmlAttributes = new { @class = "form-control input-group-sm" } })
                @*@Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClinicHospitalID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ClinicHospitalID, Model.selectClinicHospital, new { htmlAttributes = new { @class = "form-control input-group-sm" } })
                @*@Html.EditorFor(model => model.ClinicHospitalID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.ClinicHospitalID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApprovalState, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @{
                    List<SelectListItem> secListItems = new List<SelectListItem>();
                    secListItems.Add(new SelectListItem
                    {
                        Text = "Pending",
                        Value = "1"
                    });
                    secListItems.Add(new SelectListItem
                    {
                        Text = "Cancelled",
                        Value = "2"

                    });
                    secListItems.Add(new SelectListItem
                    {
                        Text = "Confirmed",
                        Value = "3"
                    });
                    secListItems.Add(new SelectListItem
                    {
                        Text = "Declined",
                        Value = "4"

                    });
                    secListItems.Add(new SelectListItem
                    {
                        Text = "Completed",
                        Value = "5"
                    });
                }

                @Html.DropDownListFor(model => model.ApprovalState, secListItems, new { htmlAttributes = new { @class = "form-control input-group-sm" } })

                @*@Html.EditorFor(model => model.ApprovalState, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.ApprovalState, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreferredDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PreferredDate, new { htmlAttributes = new { @class = "datefield form-control", @placeholder = "Enter start date..." } })
                @Html.ValidationMessageFor(model => model.PreferredDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreferredTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PreferredTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PreferredTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DoctorDentistID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DoctorDentistID, Model.selectDoctorDentist, new { htmlAttributes = new { @class = "form-control input-group-sm" } })
                @*@Html.EditorFor(model => model.DoctorDentistID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.DoctorDentistID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequestDoctorDentistID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RequestDoctorDentistID, Model.selectDoctorDentist, new { htmlAttributes = new { @class = "form-control input-group-sm" } })
                @*@Html.EditorFor(model => model.RequestDoctorDentistID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.RequestDoctorDentistID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AppointmentDate, new { htmlAttributes = new { @class = "datefield form-control", @placeholder = "Enter start date..." } })
                @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AppointmentTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AppointmentTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
                <button class="btn btn-primary" type="button"
                        onclick="location.href='@Url.Action("Index", "Appointments")'">
                    Cancel
                </button>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
