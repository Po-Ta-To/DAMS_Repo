@model DAMS_03.Models.AdminAccountEditModel
@using DAMS_03.HtmlHelpers

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Admin Account</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.UserName)

        <div class="form-group">
            @Html.LabelFor(model => model.AdminID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AdminID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdminID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SecurityLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*<select id="SecurityLevel" class="form-control input-group-sm" name="SecurityLevel">
                    <option value="1">System Account</option>
                    <option value="2">Admin Account</option>
                    <option value="3" selected="selected">Clerk Account</option>
                </select>*@
                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    if (this.User.IsInRole("SysAdmin"))
                    {
                        listItems.Add(new SelectListItem
                        {
                            Text = "System Account",
                            Value = "1"
                        });
                    }
                    listItems.Add(new SelectListItem
                    {
                        Text = "Admin Account",
                        Value = "2"

                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Clerk Account",
                        Value = "3"
                    });
                }

                @*@Html.DropDownListFor(model => model.SecurityLevel, listItems, new { htmlAttributes = new { @class = "form-control input-group-sm" } })*@

                @BootstrapHtml.Dropdown("SecurityLevel", listItems, Model.SecurityLevelID)

                @Html.ValidationMessageFor(model => model.SecurityLevel, "", new { @class = "text-danger" })
            </div>
        </div>


        @*<div class="form-group">
                @Html.LabelFor(model => model.SecurityLevel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SecurityLevel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SecurityLevel, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.SecurityLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SecurityLevel, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.SecurityLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*<select id="accountLevelInput" class="form-control input-group-sm">
                        <option value="1">System Account</option>
                        <option value="2">Admin Account</option>
                        <option value="3" selected="selected">Clerk Account</option>
                    </select>

        //is there need to change security level, or is it better to leave it unchanged?

                @Html.DropDownListFor(model => model.SecurityLevel, listItems, new { htmlAttributes = new { @class = "form-control input-group-sm" } })

                @Html.ValidationMessageFor(model => model.SecurityLevel, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @*USER NAME CANNOT BE CHANGED*@
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.HospClin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HospClin, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
                <button class="btn btn-primary" type="button"
                        onclick="location.href='@Url.Action("Index", "AdminAccounts")'">
                    Cancel
                </button>
            </div>
        </div>
    </div>
                    }

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
