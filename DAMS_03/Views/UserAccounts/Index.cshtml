@model DAMS_03.Models.UserAccountIndexModel

@{
    ViewBag.Title = "Index";
}

<h2>View Public User Accounts</h2>

<hr />

<br />

@*<div class="form-group">

    <div class="col-md-10">*@
        @{

            int pageNo;
            int perpage;

            if (Request["page"] != null)
            {
                if (!Int32.TryParse(Request["page"].ToString(), out pageNo))
                {
                    pageNo = 1;
                }
                else if (pageNo < 1)
                {
                    pageNo = 1;
                }
            }
            else
            {
                pageNo = 1;
            }

            int prevPage = pageNo - 1;
            int nextPage = pageNo + 1;
            int nextTenPage = pageNo + 10;
            int prevTenPage = pageNo - 10;
            int maxpage = Model.maxPages;

            if (Request["perpage"] != null)
            {
                if (!Int32.TryParse(Request["perpage"].ToString(), out perpage))
                {
                    perpage = 10;
                }
            }
            else
            {
                perpage = 10;
            }

            //

            string search = String.Empty;

            if (Request["search"] != null)
            {
                search = Request["search"];
            }

            string order = String.Empty;
            string orderBy = String.Empty;

            if (Request["order"] != null)
            {
                order = Request["order"];
            }

            if (Request["orderBy"] != null)
            {
                orderBy = Request["orderBy"];
            }

            string indexby = String.Empty;

            if (Request["indexby"] != null)
            {
                indexby = Request["indexby"];
            }

            //
            <p> @Model.maxRecords records found </p>
            switch (indexby)
            {
                case "1":
                    <p> Appointment Requests </p>
                    break;
                case "2":
                    <p> Cancelled Appointments </p>
                    break;
                case "3":
                    <p> Confirmed Appointments </p>
                    break;
                case "4":
                    <p> Declined Appointments </p>
                    break;
                case "5":
                    <p> Completed Appointments </p>
                    break;
                case "6":
                    <p> Cancelled/Declined Appointments </p>
                    break;
                default:
                    break;
            }
            <br />

        }
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.page)
            @Html.HiddenFor(model => model.perpage)

            <div class="form-group">
                @Html.LabelFor(model => model.search, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.search, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <input type="submit" value="Search" class="btn btn-primary" />

            <button class="btn btn-primary" type="button" value="Page"
                    onclick="location.href='@Url.Action("Index", "UserAccounts", new { page = pageNo, perpage = perpage })'">
                View all
            </button>

            if (search != "")
            {
                <hr />
                <p>Searching with query : @search</p>
            }

        }
        <br />
    @*</div>
</div>*@

<br />

<hr />

<div class="row">
    <div class="panel panel-primary">
        <div class="panel-heading clearfix">
            <div class="panel-title">
                List of Public User Accounts
                <button class="btn btn-default" type="button" style="float: right"
                        onclick="location.href='@Url.Action("Create", "UserAccounts")'">Create an Account</button>
            </div>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-12">
                    <table class="table table-hover table-sieve">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.UserAccounts[0].ID)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.UserAccounts[0].Name)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.UserAccounts[0].NRIC)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.UserAccounts[0].DOB)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.UserAccounts[0].Gender)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.UserAccounts[0].Mobile)
                                </th>
                                <th>
                                    Address
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="userAccountTableBody">
                            @for (int i = 0; i < Model.UserAccounts.Count; i++)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.UserAccounts[i].ID)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.UserAccounts[i].Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.UserAccounts[i].NRIC)
                                    </td> 
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.UserAccounts[i].DOB)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.UserAccounts[i].Gender)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.UserAccounts[i].Mobile)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.UserAccounts[i].Addrress)
                                    </td>
                                    <td>
                                        <button class="btn btn-primary" type="button"
                                                onclick="location.href='@Url.Action("Details", "UserAccounts", new { id = Model.UserAccounts[i].ID })'">
                                            Details
                                        </button>
                                        <button class="btn btn-success" type="button"
                                                onclick="location.href='@Url.Action("Edit", "UserAccounts", new { id = Model.UserAccounts[i].ID })'">
                                            Update
                                        </button>
                                        @*<button class="btn btn-danger" type="button"
                                                onclick="location.href='@Url.Action("Delete", "UserAccounts", new { id = item.ID })'">
                                            Delete
                                        </button>*@
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


@{

    <br /><br />

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "UserAccounts", new { page = 1, perpage = perpage, search = search })'">
        &lt&lt&lt First Page
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "UserAccounts", new { page = prevTenPage, perpage = perpage, search = search })'">
        &lt&lt Prev 10 Pages
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "UserAccounts", new { page = prevPage, perpage = perpage, search = search })'">
        &lt Prev Page
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "UserAccounts", new { page= nextPage, perpage = perpage, search = search })'">
        Next Page &gt
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "UserAccounts", new { page = nextTenPage, perpage = perpage, search = search })'">
        Next 10 Pages &gt&gt
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "UserAccounts", new { page = maxpage, perpage = perpage, search = search })'">
        Last Page &gt&gt&gt
    </button>

    <br />

    <hr />

    <p> Select number of results per page: </p>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "UserAccounts", new { page=pageNo, perpage = 2, search = search })'">
        2
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "UserAccounts", new { page=pageNo, perpage = 10, search = search })'">
        10
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "UserAccounts", new { page=pageNo, perpage = 20, search = search })'">
        20
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "UserAccounts", new { page=pageNo, perpage = 50, search = search })'">
        50
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "UserAccounts", new { page=pageNo, perpage = 100, search = search })'">
        100
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("Index", "UserAccounts", new { page=pageNo, perpage = 500, search = search })'">
        500
    </button>
}


