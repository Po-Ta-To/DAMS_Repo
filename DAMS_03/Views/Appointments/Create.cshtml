@model DAMS_03.Models.AppointmentCreateViewModel
@using DAMS_03.HtmlHelpers

@{
    ViewBag.Title = "Create";
}

<h2>Create Appointment</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @*@Html.HiddenFor(model => model.ClinicHospitalID)*@

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AppointmentID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AppointmentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(model => model.UserID, Model.selectUser, new { htmlAttributes = new { @class = "form-control input-group-sm" } })*@
                @*@Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })*@
                @BootstrapHtml.Dropdown("UserID", Model.selectUser, Model.UserID)
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApprovalState, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @{
                    List<SelectListItem> secListItems = new List<SelectListItem>();
                    secListItems.Add(new SelectListItem
                    {
                        Text = "Pending",
                        Value = "1",
                        Selected = true
                    });
                    secListItems.Add(new SelectListItem
                    {
                        Text = "Cancelled",
                        Value = "2"

                    });
                    secListItems.Add(new SelectListItem
                    {
                        Text = "Confirmed",
                        Value = "3"
                    });
                    secListItems.Add(new SelectListItem
                    {
                        Text = "Declined",
                        Value = "4"

                    });
                    secListItems.Add(new SelectListItem
                    {
                        Text = "Completed",
                        Value = "5"
                    });
                }

                @*@Html.DropDownListFor(model => model.ApprovalState, secListItems, new { htmlAttributes = new { @class = "form-control input-group-sm" } })*@
                @*@Html.EditorFor(model => model.ApprovalState, new { htmlAttributes = new { @class = "form-control" } })*@
                @BootstrapHtml.Dropdown("ApprovalState", secListItems, Model.ApprovalState)
                @Html.ValidationMessageFor(model => model.ApprovalState, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreferredDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PreferredDate, new { htmlAttributes = new { @class = "datefield form-control", @placeholder = "Enter start date..." } })
                @Html.ValidationMessageFor(model => model.PreferredDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreferredTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PreferredTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PreferredTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DoctorDentistID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(model => model.DoctorDentistID, Model.selectDoctorDentist, new { htmlAttributes = new { @class = "form-control input-group-sm" } })*@
                @*@Html.EditorFor(model => model.DoctorDentistID, new { htmlAttributes = new { @class = "form-control" } })*@
                @BootstrapHtml.Dropdown("DoctorDentistID", Model.selectDoctorDentist, Model.DoctorDentistID)
                @Html.ValidationMessageFor(model => model.DoctorDentistID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequestDoctorDentistID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(model => model.RequestDoctorDentistID, Model.selectDoctorDentist, new { htmlAttributes = new { @class = "form-control input-group-sm" } })*@
                @*@Html.EditorFor(model => model.RequestDoctorDentistID, new { htmlAttributes = new { @class = "form-control" } })*@
                @BootstrapHtml.Dropdown("RequestDoctorDentistID", Model.selectDoctorDentist, Model.RequestDoctorDentistID)
                @Html.ValidationMessageFor(model => model.RequestDoctorDentistID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AppointmentDate, new { htmlAttributes = new { @class = "datefield form-control", @placeholder = "Enter start date..." } })
                @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AppointmentTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AppointmentTime, "", new { @class = "text-danger" })
            </div>
        </div>



        <hr />

        <div class="panel-body">
            <div class="row">
                <div class="col-md-12">
                    <table class="table table-hover table-sieve">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.listOfTreatments[0].TreatmentName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.listOfTreatments[0].TreatmentDesc)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.listOfTreatments[0].IsFollowUp)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.listOfTreatments[0].Price)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.listOfTreatments[0].IsChecked)
                                </th>
                            </tr>
                        </thead>
                        <tbody id="treatmentTableBody">
                            @for (int i = 0; i < Model.listOfTreatments.Count; i++)
                            {
                                @Html.HiddenFor(modelItem => Model.listOfTreatments[i].ID)
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.listOfTreatments[i].TreatmentName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.listOfTreatments[i].TreatmentDesc)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.listOfTreatments[i].IsFollowUp)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.listOfTreatments[i].Price)
                                    </td>
                                    <td>
                                        @Html.EditorFor(modelItem => Model.listOfTreatments[i].IsChecked, new { htmlAttributes = new { @class = "form-control" } })
                                    </td>


                                </tr>
                            }
                        </tbody>
                    </table>
                    @Html.ValidationMessageFor(model => model.listOfTreatments, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                <button class="btn btn-primary" type="button"
                        onclick="location.href='@Url.Action("CreateSelection", "Appointments")'">
                    Back to List
                </button>
            </div>
        </div>
    </div>
                    }

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
