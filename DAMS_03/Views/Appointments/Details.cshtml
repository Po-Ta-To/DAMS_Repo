@model DAMS_03.Models.AppointmentDetailViewModel

@{
    ViewBag.Title = "Details";
}

<h2>View Appointment Details</h2>

<div>
    <hr />
    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AppointmentID, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApprovalState, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApprovalState, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClinicHospitalName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClinicHospitalName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreferredDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PreferredDate, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreferredTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PreferredTime, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AppointmentDate, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AppointmentTime, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DoctorDentistName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DoctorDentistName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequestDoctorDentistName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RequestDoctorDentistName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            </div>
        </div>


        <hr />

        <div class="panel-body">
            <div class="row">
                <div class="col-md-12">
                    <table class="table table-hover table-sieve">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.listOfTreatments[0].TreatmentName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.listOfTreatments[0].TreatmentDesc)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.listOfTreatments[0].IsFollowUp)
                                </th>
                            </tr>
                        </thead>
                        <tbody id="treatmentTableBody">
                            @for (int i = 0; i < Model.listOfTreatments.Count; i++)
                            {
                                @Html.HiddenFor(modelItem => Model.listOfTreatments[i].ID)
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.listOfTreatments[i].TreatmentName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.listOfTreatments[i].TreatmentDesc)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => Model.listOfTreatments[i].IsFollowUp)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <hr />

        <p>
            @Model.approvalString
        </p>


        <div class="form-group">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <input type="submit" value="Confirm" class="btn btn-info" name="3"/>
                //@Html.ActionLink("Confirm", "Status", "Appointments", new { id = 3 }, new { @class = "btn btn-info" })
            @*}

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()*@
                <input type="submit" value="Decline" class="btn btn-danger" name="4"/>
                //@Html.ActionLink("Decline", "Status", "Appointments", new { id = 4 }, new { @class = "btn btn-danger" })
            @*}

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()*@
                <input type="submit" value="Completed" class="btn btn-success" name="5"/>
                //@Html.ActionLink("Completed", "Status", "Appointments", new { id = 5 }, new { @class = "btn btn-success" })
            }
        </div>

        <hr />

        <p></p>

        <div class="form-group">
            <button class="btn btn-success" type="button"
                    onclick="location.href='@Url.Action("Edit", "Appointments", new { id = Model.ID })'">
                Update
            </button>
            <button class="btn btn-primary" type="button"
                    onclick="location.href='javascript:history.go(-1)'">
                Back
            </button>
            <button class="btn btn-primary" type="button"
                    onclick="location.href='@Url.Action("Index", "Appointments", new { id = Model.ID})'">
                Back to List
            </button>
        </div>
    </div>
</div>
