@model DAMS_03.Models.AppointmentIndexModel

@{
    ViewBag.Title = "Index";
}

<h2>View Appointments</h2>

<hr />
<p> @Model.maxRecords records found </p>

@{

    var id_v = ViewContext.RouteData.Values["id"];
    int id_i;
    Int32.TryParse((string)id_v, out id_i);

    switch (id_i)
    {
        case 1:
            <p> Appointment Requests </p>
            break;
        case 2:
            <p> Cancelled/Declined Appointments </p>
            break;
        case 3:
            <p> Confirmed Appointments </p>
            break;
        case 4:
            <p> Cancelled/Declined Appointments </p>
            break;
        case 5:
            <p> Completed Appointments </p>
            break;
        default:
            break;
    }
}

<br />

<div class="row">
    <div class="panel panel-primary pull-left">
        <div class="panel-heading clearfix">
            <div class="panel-title" width="100%">
                List of Appointments
                <button class="btn btn-default" type="button" style="float: right"
                        onclick="location.href='@Url.Action("CreateSelection", "Appointments")'">
                    Create an Appointment
                </button>
            </div>
        </div>
        <div class="panel-body">
            <div class="table-responsive">
                <table class="table table-hover table-sieve">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.appointments[0].AppointmentID)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.appointments[0].UserName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.appointments[0].ApprovalState)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.appointments[0].PreferredDate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.appointments[0].AppointmentDate)
                            </th>
                            @*<th>
                                    @Html.DisplayNameFor(model => model.appointments[0].PreferredTime)
                                </th>*@
                            <th>
                                @Html.DisplayNameFor(model => model.appointments[0].ClinicHospitalName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.appointments[0].RequestDoctorDentistName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.appointments[0].DoctorDentistName)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="appointmentTableBody">
                        @for (int i = 0; i < Model.appointments.Count; i++)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => Model.appointments[i].AppointmentID)
                                </td>
                                <td>
                                    <a href="@Url.Action("Details", "UserAccounts", new { id = Model.appointments[i].UserID })">
                                        @Html.DisplayFor(modelItem => Model.appointments[i].UserName)
                                    </a>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => Model.appointments[i].ApprovalState)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => Model.appointments[i].PreferredDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => Model.appointments[i].AppointmentDate)
                                </td>
                                @*<td>
                                        @Html.DisplayFor(modelItem => Model.appointments[i].PreferredTime)
                                    </td>*@
                                <td>
                                    @Html.DisplayFor(modelItem => Model.appointments[i].ClinicHospitalName)
                                </td>
                                <td>
                                    @if (Model.appointments[i].RequestDoctorDentistID == null)
                                    {
                                        @Html.DisplayFor(modelItem => Model.appointments[i].RequestDoctorDentistName)
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("Details", "DoctorDentists", new { id = Model.appointments[i].RequestDoctorDentistID })">
                                            @Html.DisplayFor(modelItem => Model.appointments[i].RequestDoctorDentistName)
                                        </a>
                                    }
                                </td>
                                <td>
                                    @if (Model.appointments[i].DoctorDentistName == null)
                                    {
                                        @Html.DisplayFor(modelItem => Model.appointments[i].DoctorDentistName)
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("Details", "DoctorDentists", new { id = Model.appointments[i].DoctorDentistID })">
                                            @Html.DisplayFor(modelItem => Model.appointments[i].DoctorDentistName)
                                        </a>
                                    }
                                </td>
                                
                                <td>
                                    <button class="btn btn-primary" type="button"
                                            onclick="location.href='@Url.Action("Details", "Appointments", new { id = Model.appointments[i].ID })'">
                                        Details
                                    </button><br />
                                    <button class="btn btn-success" type="button"
                                            onclick="location.href='@Url.Action("Edit", "Appointments", new { id = Model.appointments[i].ID })'">
                                        Update
                                    </button><br />
                                    @if (this.User.IsInRole("SysAdmin"))
                                    {
                                        <button class="btn btn-danger" type="button"
                                                onclick="location.href='@Url.Action("Delete", "Appointments", new { id = Model.appointments[i].ID })'">
                                            Delete
                                        </button>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@{
    int pageNo;
    int perpageNo;

    if (Request["page"] != null)
    {
        if (!Int32.TryParse(Request["page"].ToString(), out pageNo))
        {
            pageNo = 1;
        }
        else if (pageNo < 1)
        {
            pageNo = 1;
        }
    }
    else
    {
        pageNo = 1;
    }

    int prevPage = pageNo - 1;
    int nextPage = pageNo + 1;
    int nextTenPage = pageNo + 10;
    int prevTenPage = pageNo - 10;
    int maxpage = Model.maxPages;

    if (Request["perpage"] != null)
    {
        if (!Int32.TryParse(Request["perpage"].ToString(), out perpageNo))
        {
            perpageNo = 10;
        }
    }
    else
    {
        perpageNo = 10;
    }

    <br /><br />

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("IndexBy", "Appointments", new { id = id_i, page = 1, perpage = perpageNo})'">
        &lt&lt&lt First Page
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("IndexBy", "Appointments", new { id = id_i, page = prevTenPage, perpage = perpageNo})'">
        &lt&lt Prev 10 Pages
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("IndexBy", "Appointments", new { id = id_i, page = prevPage, perpage = perpageNo})'">
        &lt Prev Page
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("IndexBy", "Appointments", new { id = id_i, page= nextPage, perpage = perpageNo })'">
        Next Page &gt
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("IndexBy", "Appointments", new { id = id_i, page = nextTenPage, perpage = perpageNo})'">
        Next 10 Pages &gt&gt
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("IndexBy", "Appointments", new { id = id_i, page = maxpage, perpage = perpageNo})'">
        Last Page &gt&gt&gt
    </button>

    <br />

    <hr />
    
    <p> Select number of results per page: </p>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("IndexBy", "Appointments", new { id = id_i, page=pageNo, perpage = 10 })'">
        10
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("IndexBy", "Appointments", new { id = id_i, page=pageNo, perpage = 20 })'">
        20
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("IndexBy", "Appointments", new { id = id_i, page=pageNo, perpage = 50 })'">
        50
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("IndexBy", "Appointments", new { id = id_i, page=pageNo, perpage = 100 })'">
        100
    </button>

    <button class="btn btn-primary" type="button" value="Page"
            onclick="location.href='@Url.Action("IndexBy", "Appointments", new { id = id_i, page=pageNo, perpage = 500 })'">
        500
    </button>
}